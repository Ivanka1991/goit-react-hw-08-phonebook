{"version":3,"sources":["components/PrivateRoute/PriveteRoute.js","components/PublicRoute/PublicRoute.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/img/avatar.jpg","components/UserMenu/UserMenu.js","components/AutNav/AuthNav.js","components/AppBar/AppBar.js","components/App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","redux/auth/auth-reducers.js"],"names":["PrivateRoute","redirectTo","children","routeProps","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","to","PublicRoute","restricted","shouldRedirect","Container","Navigation","exact","UserMenu","dispatch","useDispatch","name","getUserName","src","avatar","alt","width","Button","variant","size","color","type","onClick","authOperations","logOut","AuthNav","AppBar","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","path","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","changeFilter","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","registerRequest","post","response","data","registerSuccess","registerError","logIn","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","isAuthenticated","user","getLoading","isLoading","getError","error","createAction","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","initialState","email","setError"],"mappings":"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","file":"static/js/main.dd1c9db7.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\n\nexport default function PrivateRoute({\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","// export default function Container({ children }) {\n//   return <div>{ children }</div>\n// }\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n  return <div>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nfunction Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink to=\"/contacts\" exact>\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/avatar.98689f20.jpg\";","import { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport Button from '@material-ui/core/Button';\nimport avatar from './img/avatar.jpg';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div>\n      <img src={avatar} alt={avatar} width=\"32\" />\n      <span>Welcome,{name}</span>\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"primary\"\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink to=\"/register\" exact>\n        Registration\n      </NavLink>\n\n      <NavLink to=\"/login\" exact>\n        Sing In\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from 'components/Navigation/Navigation';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthNav from 'components/AutNav/AuthNav';\nimport { authSelectors } from '../../redux/auth/index';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { lazy, Suspense, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from './PrivateRoute/PriveteRoute';\nimport PublicRoute from './PublicRoute/PublicRoute';\nimport Container from './Container/Container';\nimport AppBar from './AppBar/AppBar';\nimport { authOperations } from 'redux/auth';\n\nconst HomeView = lazy(() => import('../views/HomeView'));\nconst RegisterView = lazy(() => import('../views/RegisterView'));\nconst LoginView = lazy(() => import('../views/LoginView'));\nconst ContactsView = lazy(() => import('../views/ContactsView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<p>Loading</p>}>\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducers';\nimport authReducer from './auth/auth-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>{' '}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credentials => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error));\n  }\n};\n\nexport const logIn = credentials => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error));\n  }\n};\nexport const logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error));\n    token.unset();\n  }\n};\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUserName = state => state.auth.user.name;\n\nexport const getLoading = state => state.auth.isLoading;\n\nexport const getError = state => state.auth.error;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n  [registerRequest]: () => null,\n  [loginRequest]: () => null,\n  [logoutRequest]: () => null,\n  [getCurrentUserRequest]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nconst isLoading = createReducer(false, {\n  [registerRequest]: () => true,\n  [registerSuccess]: () => false,\n  [registerError]: () => false,\n  [loginRequest]: () => true,\n  [loginSuccess]: () => false,\n  [loginError]: () => false,\n  [logoutRequest]: () => true,\n  [logoutSuccess]: () => false,\n  [logoutError]: () => false,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n  isLoading,\n});\n"],"sourceRoot":""}